# 剑指 Offer 59 - II. 队列的最大值
# 题目链接：https://leetcode-cn.com/problems/dui-lie-de-zui-da-zhi-lcof/
# 参考链接：https://leetcode-cn.com/problems/dui-lie-de-zui-da-zhi-lcof/solution/ru-he-jie-jue-o1-fu-za-du-de-api-she-ji-ti-by-z1m/
# 这里面还有另外2种解法 队列+双端队列 队列+数组 这里实现的是用max函数和2个数组
# 使用python里的max函数
class MaxQueue:
    # 暴力的使用max函数

    def __init__(self):
        self.queue=[]

    def max_value(self) -> int:
        if len(self.queue)==0:
            return -1
        else:
            return max(self.queue)

    def push_back(self, value: int) -> None:
        self.queue.append(value)


    def pop_front(self) -> int:
        if len(self.queue)==0:
            return -1
        else:
            return self.queue.pop(0)

# Your MaxQueue object will be instantiated and called as such:
# obj = MaxQueue()
# param_1 = obj.max_value()
# obj.push_back(value)
# param_3 = obj.pop_front()
# ---------------------------
class MaxQueue:
    # 2个数组实现

    def __init__(self):
        self.queue = []
        self.maxvalue = []

    def max_value(self) -> int:
        if len(self.maxvalue)==0:
            return -1
        else:
            return self.maxvalue[0]

    def push_back(self, value: int) -> None:
        self.queue.append(value)
        while self.maxvalue and self.maxvalue[-1] < value:
            self.maxvalue.pop()
        self.maxvalue.append(value)


    def pop_front(self) -> int:
        if len(self.queue)==0:
            return -1
        else:
            rs = self.queue.pop(0)
            if rs == self.maxvalue[0]:
                self.maxvalue.pop(0)
            return rs

# Your MaxQueue object will be instantiated and called as such:
# obj = MaxQueue()
# param_1 = obj.max_value()
# obj.push_back(value)
# param_3 = obj.pop_front()
